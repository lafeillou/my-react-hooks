{"ast":null,"code":"var _jsxFileName = \"/Users/app-app/Desktop/my-react-hooks/lesson1-3/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport \"./App.css\";\nimport { Hello } from \"./Hello\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const increment = useCallback(() => {\n    setCount(c => c + 1);\n  }, [setCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Hello, {\n      increment: increment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"/aoX4znFqoWvnYxlxwV5UDyQlhg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/app-app/Desktop/my-react-hooks/lesson1-3/src/App.js"],"names":["React","useCallback","useState","Hello","App","count","setCount","increment","c"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAO,WAAP;AAEA,SAASC,KAAT,QAAsB,SAAtB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMK,SAAS,GAAGN,WAAW,CAAC,MAAM;AAClCK,IAAAA,QAAQ,CAAEE,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAAR;AACD,GAF4B,EAE1B,CAACF,QAAD,CAF0B,CAA7B;AAIA,sBACE;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,4BAAaF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAZD;;GAAMD,G;;KAAAA,G;AAaN,eAAeA,GAAf","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport \"./App.css\";\n\nimport { Hello } from \"./Hello\";\n\nconst App = () => {\n  const [count, setCount] = useState(0);\n  const increment = useCallback(() => {\n    setCount((c) => c + 1);\n  }, [setCount]);\n\n  return (\n    <div>\n      <Hello increment={increment} />\n      <div>count: {count}</div>\n    </div>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}