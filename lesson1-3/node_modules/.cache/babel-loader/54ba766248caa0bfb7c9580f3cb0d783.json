{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from \"react\";\nexport const useFetch = url => {\n  _s();\n\n  const isCurrent = useRef(true);\n  const [state, setState] = useState({\n    data: null,\n    loading: true\n  });\n  useEffect(() => {\n    return () => {\n      isCurrent.current = false;\n    };\n  }, []);\n  useEffect(() => {\n    setState(state => ({\n      data: state.data,\n      loading: true\n    }));\n    fetch(url).then(x => {\n      return x.text();\n    }).then(y => {\n      setTimeout(() => {\n        if (isCurrent.current) {\n          setState({\n            data: y,\n            loading: false\n          });\n        }\n      }, 2000);\n    });\n  }, [url, setState]);\n  return state;\n};\n\n_s(useFetch, \"izH7QZz61E0T8moaeg8laVADP8g=\");","map":{"version":3,"sources":["/Users/app-app/Desktop/my-react-hooks/lesson1-3/src/useFetch.js"],"names":["useEffect","useState","useRef","useFetch","url","isCurrent","state","setState","data","loading","current","fetch","then","x","text","y","setTimeout"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AAEA,OAAO,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AAC/B,QAAMC,SAAS,GAAGH,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,OAAO,EAAE;AAAvB,GAAD,CAAlC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXK,MAAAA,SAAS,CAACK,OAAV,GAAoB,KAApB;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAV,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAAED,KAAD,KAAY;AAAEE,MAAAA,IAAI,EAAEF,KAAK,CAACE,IAAd;AAAoBC,MAAAA,OAAO,EAAE;AAA7B,KAAZ,CAAD,CAAR;AACAE,IAAAA,KAAK,CAACP,GAAD,CAAL,CACGQ,IADH,CACSC,CAAD,IAAO;AACX,aAAOA,CAAC,CAACC,IAAF,EAAP;AACD,KAHH,EAIGF,IAJH,CAISG,CAAD,IAAO;AACXC,MAAAA,UAAU,CAAC,MAAM;AACf,YAAIX,SAAS,CAACK,OAAd,EAAuB;AACrBH,UAAAA,QAAQ,CAAC;AAAEC,YAAAA,IAAI,EAAEO,CAAR;AAAWN,YAAAA,OAAO,EAAE;AAApB,WAAD,CAAR;AACD;AACF,OAJS,EAIP,IAJO,CAAV;AAKD,KAVH;AAWD,GAbQ,EAaN,CAACL,GAAD,EAAMG,QAAN,CAbM,CAAT;AAeA,SAAOD,KAAP;AACD,CA1BM;;GAAMH,Q","sourcesContent":["import { useEffect, useState, useRef } from \"react\";\n\nexport const useFetch = (url) => {\n  const isCurrent = useRef(true);\n  const [state, setState] = useState({ data: null, loading: true });\n\n  useEffect(() => {\n    return () => {\n      isCurrent.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    setState((state) => ({ data: state.data, loading: true }));\n    fetch(url)\n      .then((x) => {\n        return x.text();\n      })\n      .then((y) => {\n        setTimeout(() => {\n          if (isCurrent.current) {\n            setState({ data: y, loading: false });\n          }\n        }, 2000);\n      });\n  }, [url, setState]);\n\n  return state;\n};\n"]},"metadata":{},"sourceType":"module"}