{"ast":null,"code":"var _jsxFileName = \"/Users/app-app/Desktop/my-react-hooks/lesson1-3/src/Hello.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect, useLayoutEffect } from \"react\";\nimport { useFetch } from \"./useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Hello = () => {\n  _s();\n\n  const renders = useRef(0);\n  const [count, setCount] = useState(() => {\n    return JSON.parse(localStorage.getItem(\"count\")) ? JSON.parse(localStorage.getItem(\"count\")) : 0;\n  });\n  const {\n    data\n  } = useFetch(`http://numbersapi.com/${count}/trivia`);\n  useEffect(() => {\n    localStorage.setItem(\"count\", JSON.stringify(count));\n  }, [count]); // console.log(\"hello renders: \", renders.current++);\n\n  const divRef = useRef();\n  useLayoutEffect(() => {\n    console.log(divRef.currrent.getBoundingClientRect());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: divRef,\n        children: !data ? \"loading...\" : data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(c => c + 1),\n      children: \"increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Hello, \"8JDXRo5ARl5i7mdfzo2mXekP1TE=\", false, function () {\n  return [useFetch];\n});\n\n_c = Hello;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hello\");","map":{"version":3,"sources":["/Users/app-app/Desktop/my-react-hooks/lesson1-3/src/Hello.js"],"names":["React","useRef","useState","useEffect","useLayoutEffect","useFetch","Hello","renders","count","setCount","JSON","parse","localStorage","getItem","data","setItem","stringify","divRef","console","log","currrent","getBoundingClientRect","display","c"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,eAA7C,QAAoE,OAApE;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACzB,QAAMC,OAAO,GAAGN,MAAM,CAAC,CAAD,CAAtB;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,MAAM;AACvC,WAAOQ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,IACHH,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CADG,GAEH,CAFJ;AAGD,GAJiC,CAAlC;AAKA,QAAM;AAAEC,IAAAA;AAAF,MAAWT,QAAQ,CAAE,yBAAwBG,KAAM,SAAhC,CAAzB;AACAL,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACG,OAAb,CAAqB,OAArB,EAA8BL,IAAI,CAACM,SAAL,CAAeR,KAAf,CAA9B;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT,CARyB,CAYzB;;AACA,QAAMS,MAAM,GAAGhB,MAAM,EAArB;AAEAG,EAAAA,eAAe,CAAC,MAAM;AACpBc,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,QAAP,CAAgBC,qBAAhB,EAAZ;AACD,GAFc,EAEZ,EAFY,CAAf;AAGA,sBACE;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEL,MAAV;AAAA,kBAAmB,CAACH,IAAD,GAAQ,YAAR,GAAuBA;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,4BAAaN,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAAEc,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA3BM;;GAAMjB,K;UAOMD,Q;;;KAPNC,K","sourcesContent":["import React, { useRef, useState, useEffect, useLayoutEffect } from \"react\";\nimport { useFetch } from \"./useFetch\";\n\nexport const Hello = () => {\n  const renders = useRef(0);\n  const [count, setCount] = useState(() => {\n    return JSON.parse(localStorage.getItem(\"count\"))\n      ? JSON.parse(localStorage.getItem(\"count\"))\n      : 0;\n  });\n  const { data } = useFetch(`http://numbersapi.com/${count}/trivia`);\n  useEffect(() => {\n    localStorage.setItem(\"count\", JSON.stringify(count));\n  }, [count]);\n\n  // console.log(\"hello renders: \", renders.current++);\n  const divRef = useRef();\n\n  useLayoutEffect(() => {\n    console.log(divRef.currrent.getBoundingClientRect());\n  }, []);\n  return (\n    <div>\n      <div style={{ display: \"flex\" }}>\n        <div ref={divRef}>{!data ? \"loading...\" : data}</div>\n      </div>\n      <div>count: {count}</div>\n      <button onClick={() => setCount((c) => c + 1)}>increment</button>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}